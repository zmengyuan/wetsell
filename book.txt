用idea新建springboot项目
新建spring-start项目，勾选web即可
新建数据库
日志，添加依赖lockback
本机：192.168.1.6
虚拟机：192.168.1.5

数据库用utf-8mbf：这样可以存表情

第四章ProductCategory
买家端开发：Dao层开发——>Service层——>Controller层
jpa的操作，
实体类上面的注解操作：
实体的名字要和表名一样，如果不一样，需要在实体类上加@Table(name = "tbname")
ProductCategory实体类——dao层——测试
注意在实体类上加上这个注解@DynamicUpdate//动态更新，如果更新操作时候其实是和原来完全一样的这种不会更新时间
省略getset方法
	添加依赖<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
	这样打包是可以的了，
	但是要在idea中跑起来还需要安装插件


Test测试方法上添加@Transactional注解表示此测试方法不会对数据库的数据有影响，完全的回滚，不管有没有异常发生

CategoryService层,写好写测试
Assert.assertEquals(new Integer(1),productCategory.getCategoryId());，前面一个参数它要求是对象

第五章 买家商品ProductInfo
ProductRepository--Test
ProductService层，spring自带的Pageable分页接口，传参数时候可以用
PageRequest request = new PageRequest(0, 2);

BuyerProductController层
对照接口文档。
首先定义好返回vo——ResultVO

返回给前端的数据应该遵循前端需要什么返回什么，隐私什么的还是需要注意
@JsonProperty(value = "name")
返回给前端的属性的名字

java8新特性
lambada表达式对于集合类的操作！

数据库的操作不要写在循环里面

创建ResultVOUtil工具类.

这里有和虚拟机联合，然后联合前后端的操作。
访问虚拟机地址：http://192.168.1.5
前端会跳转到（请在微信客户端打开链接）,这是因为前端做了逻辑判断
设置一下cookie
访问这一没有做cookie判断的页：192.168.1.5/#/order
然后打开开发者工具，applicaiotn中的cookies设置一下cookie
在console中输入document.cookie='openid=abc'
然后访问http://192.168.1.5
访问不到数据：
修改linux的配置
vim /usr/local/nginx/conf/nginx.conf
修改：location/sell/{proxy_pass http://192.168.1.6:8080/sell/
    server_name:sell.com（因为微信不同意ip访问）}
    修改了之后要重启：nginx -s reload
    修改了域名要修改本机的host设置

第六章 买家订单
OrderMaster实体类和dao层
OrderDetail实体类和dao层

OrderMaster表其实没有OrderDetail这个字段，可以在字段加上@Transient注解这样实体类对应表不会报错，对应的时候会忽略这个字段。
但是这样做不好，实体类应该只对应数据库，
所以新建对象，dto
单价一定不能由前端传过来！！！

自定义异常类，
自定义返回码枚举类

OrderService
————keyUtil——时间+随机数=唯一主键,注意多线程

productService的加减库存方法

BeanUtils.copyProperties()方法即使属性值为空也会拷贝，所以注意先拷贝，再赋值

注意：当两个用户同时对一个商品减库存的时候
多线程：分别查出来的数据可以减，但是同时其实只有一件，会导致超卖
后面课程会用到Redis的锁机制

CollectionUtils.isEmpty(orderDetailList)
page.getContent();获取分页详情
return new PageImpl<OrderDTO>(orderDTOList, pageable, orderMasterPage.getTotalElements());

买家端api
OrderForm2OrderDTOConverter类的gson转换
将String转成List
orderDetailList = gson.fromJson(orderForm.getItems(),
                    new TypeToken<List<OrderDetail>>() {
                    }.getType());

因为前端时间格式要的是秒数
所以需要处理
public class Date2LongSerializer  extends JsonSerializer<Date>
然后就可以在字段上添加注解@JsonSerialize(using = Date2LongSerializer.class)

在类上添加@JsonInclude(JsonInclude.Include.NON_NULL)注解，可以让null字段不返回给前端

全局配置 jackson:
        default-property-inclusion: non_null

如果需要返回空字符或者空集合，后台可以设置初始值
List<OrderDetail> orderDetailList = new ArrayList<>()

第七章
第一个关键点：
获取OpenId：手工方式，利用第三方SDK
微信支付：https://pay.weixin.qq.com/wiki——普通商户版，开发文档都要看
微信公众平台：https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1445241432——微信网页开发——微信网页授权
调试：https://natapp.cn
二级域名：weichatsell.natapp1.cc


设置域名
修改appid和redirectId,引导用户打开这个页面
https://open.weixin.qq.com/connect/oauth2/authorize?appid=wxf82672541effbe0e&redirect_uri=http://weichatsell.natapp1.cc/sell/weixin/auth&response_type=code&scope=snsapi_base&state=STATE#wechat_redirect
用户点击以上页面之后会返回： redirect_uri/?code=CODE&state=STATE。
所以会去调用sell/weixin/auth方法，并且可以获取code=CODE&state=STATE。
获取code之后，请求以下链接获取access_token
https://api.weixin.qq.com/sns/oauth2/access_token?appid=wxf82672541effbe0e&secret=de59f601c4b564fbf7f90dc7f76d6664&code=CODE&grant_type=authorization_code

第三方sck：https://github.com/Wechat-Group/weixin-java-tools
https://github.com/Wechat-Group/weixin-java-tools/wiki/MP_OAuth2%E7%BD%91%E9%A1%B5%E6%8E%88%E6%9D%83

微信点击
http://weichatsell.natapp1.cc/sell/wechat/authorize?returnUrl=www.imooc.com

要去前端项目的获取openid接口配置网址
cd opt/code/
再进入文件夹，再进入config, index.js里面修改
sellUrl:"http://sell.com"
openIdUrl:"http://weichatsell.natapp1.cc/sell/wechat/authorize"
wechatPayUrl:
回到前端项目根目录sell_fe_buyer
npm run build
构建好的文件全部再/dist目录
需要把下面的所有拷贝到网站的根目录cp -r dist/* /opt/data/wwwroot/sell/

访问sell.com
程序要我们微信访问，但是手机又不能访问
这时候用代理，通过手机访问的时候先访问电脑，再用电脑访问

charles
fiddler抓包工具
微信支付
微信退款


第八章：微信支付
官方文档：统一下单，
第三方SCK：www.github.com/
pom文件
payController
payService
拷贝pay.html到static
参数要动态，创建create.ftl

修改前端支付代码
修改index.js的wechatPayUrl

double和double之间的比较也是会出问题的。

下载证书
配置证书路径，必须让程序又可读



8-8 测试账号：
    申请测试账号，配置测试号二维码
    配置网页账号，就是去买的那个sell.natapp4.cc

    移步：https://github.com/Pay-Group/best-pay-sdk后续支付



第九层 —— 卖家端

快速布局：www.ibootstrap.cn布局

忽略@JsonIgnore

订单列表
取消订单
订单详情

第十章
1、修改代码后程序不重启，只适用于更改了模板文件（Build——build project）

删除的时候一定记着先判断其他是否在使用

第11章
一、分布式系统
    旨在支持应用程序和服务的开发，可以利用物理架构由多个自治的处理元素，不共享主内存，但通过网络发送消息合作。
二、三个特点
    多节点    消息通信    不共享内存
    分布式系统（一个洗菜，一个炒菜）    集群（相同功能）    分布式计算（两个人都炒一样的菜，放到一样的盘子，分不清哪个是哪个炒的）
三、分布式和集群的区别
    分布式：不同功能的节点，每一个系节点都可以做一个集群
    集群：相同功能的节点， 集群不一定是分布式的（比如前后端不分离的，就算做了集群，但是allinone模式，它不需要消息通信）
    水平扩展：其实是集群：多个服务器都是一样的
    垂直扩展：拆分服务：比如订单服务在A，登录服务在B
四、广义的session
    会话控制
    理解为key-value的机制，保存和获取
    从key方式看：一般由sessionId（由cookie来保存和获取）和token（由http头里获取url里保存和获取）

开放平台网站应用登录
扫码登录：开放平台——网站应用
open.weixin.qq.com






























