关于微信点餐系统开发的总结

3-2日志的使用
	1、什么是日志框架
		是一套能实现日志输出的工具包
		能够描述系统运行状态的所有时间都可以算作日志（用户下线，接口超市，数据库崩溃...）
	2、日志框架的能力
		定制输出目标
		定制输出格式
		携带上下文信息
		运行时选择性输出
		灵活的配置
	3、日志框架的选择
		常用的日志框架：JUL、JCL、Log4j、log4j2、Logback、Slf4j、jboss-logging
		面向接口编程：
			日志门面：JCL、SLF4J、jboss-logging
			日志实现：Log4j（被作者自己抛弃）、Log4j2（和Log4j没有关系，太先进了，开源框架对它的完善不好）、Logback、JUL
	4、logback的使用与配置
		applicaiotn.yml中配置方式比较简单
		logback-spring.xml可以进行复杂的配置。
		(看wechatsell项目的LoggerTest类和application.xml和logback-spring.xml)
		生产中一般将error和info分别每日输出
		还可以多看看源码：maven jar包中spring-boot中logging下面

4-dao层的开发
	1、引入pom文件：spring-boot-starter-data-jpa
	2、定义接口类public interface ProductCategoryRepository extends JpaRepository<ProductCategory,Integer> ，泛型参数一个是该类，一个是该类的主键，自定义方法要注意命名规范，jpa是根据命名会自动写sql的
	3、实体的名字要和表名一样，如果不一样，需要在实体类上加@Table(name = "tbname")，
		实体类上需要添加@Entity注解，把实体映射为数据表，
		添加@DynamicUpdate//动态更新 比如：做更新操作的时候，首先是获取该类，如果只更新了类型，数据库的updateTime不会更新，加了这个注解才会更新
		主键需要加@Id注解，如果是整型自增还需要添加@GeneratedValue
	4、添加依赖：lombok，可以省略getter、setter、toString()等方法
	5、Test测试方法上添加@Transactional注解表示此测试方法不会对数据库的数据有影响，完全的回滚，不管有没有异常发生
	6、dao层的测试：类上添加@RunWith(SpringRunner.class)@SpringBootTest，@Autowired自动注入该接口，直接用接口.方法Assert()测试

5-
	1、spring自带的Pageable分页接口，传参数时候可以用PageRequest request = new PageRequest(0, 2);返回Page<> list
	2、lambda表达式：List<Integer> categoryTypeList = productInfoList.stream()
                .map(e -> e.getCategoryType())
                .collect(Collectors.toList());
